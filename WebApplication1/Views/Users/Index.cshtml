@* @model List<MiTabla> *@
@model List<WebApplication1.Models.Usuario>

<h1> Usuarios</h1>

@* <button onclick="fetchAndInsertUsers()">Fetch And Insert Users</button>
 *@
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Username</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Website</th>
@*             <th>Street</th>
            <th>Suite</th>
            <th>City</th>
            <th>Zipcode</th>
            <th>Lat</th>
            <th>Lng</th>
            <th>Company Name</th>
            <th>Catch Phrase</th>
            <th>Bs</th> *@
            <th>Actions</th> 
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @* <td>
                    <span class="display" onclick="editName(this, @item.Id)">@item.Name</span>
                    <input type="text" class="edit" value="@item.Name" onblur="saveName(this, @item.Id)" style="display:none;" />
                </td> *@
                <td>@Html.DisplayFor(x => item.Name)</td>
                <td>@Html.DisplayFor(x => item.Username)</td>
                <td>@Html.DisplayFor(x => item.Email)</td>
                <td>@Html.DisplayFor(x => item.Phone)</td>
                <td>@Html.DisplayFor(x => item.Website)</td>
@*              <td>@Html.DisplayFor(x => item.Direccion.Street)</td>
                <td>@Html.DisplayFor(x => item.Direccion.Suite)</td>
                <td>@Html.DisplayFor(x => item.Direccion.City)</td>
                <td>@Html.DisplayFor(x => item.Direccion.Zipcode)</td>
                <td>@Html.DisplayFor(x => item.Direccion.Geo.Lat)</td>
                <td>@Html.DisplayFor(x => item.Direccion.Geo.Lng)</td>
                <td>@Html.DisplayFor(x => item.Compania.Name)</td>
                <td>@Html.DisplayFor(x => item.Compania.CatchPhrase)</td>
                <td>@Html.DisplayFor(x => item.Compania.Bs)</td> *@
                <td>
                    <a asp-controller="Users"
                       asp-action="Editar"
                       asp-route-id="@item.Id"
                       class="btn btn-primary">
                        Editar
                    </a>                    
                    <a href="@Url.Action("Delete", "User", new { id = item.Id })" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this user?');">Borrar</a>
                </td>
            </tr>
        }
    </tbody>
</table>


<script>
    async function fetchAndInsertUsers() {
        try {
            const response = await fetch('/api/users/fetch-and-insert', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                const data = await response.json();
                console.log('Users fetched and inserted successfully:', data);
            } else {
                console.error('Failed to fetch and insert users:', response.status, response.statusText);
            }
        } catch (error) {
            console.error('Error fetching and inserting users:', error);
        }
    }

    function editName(element, userId) {
        var displaySpan = element;
        var input = displaySpan.nextElementSibling;

        displaySpan.style.display = 'none';
        input.style.display = 'block';
        input.focus();
    }

    async function saveName(input, userId) {
        var newName = input.value;
        var displaySpan = input.previousElementSibling;

        try {
            const response = await fetch(`/api/users/${userId}/updateName`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ name: newName })
            });

            if (response.ok) {
                displaySpan.innerText = newName;
                displaySpan.style.display = 'block';
                input.style.display = 'none';
            } else {
                console.error('Failed to save the new name');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }
</script>